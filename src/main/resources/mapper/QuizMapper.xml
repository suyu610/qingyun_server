<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qdu.qingyun.mapper.QuizMapper">

    <select id="getAllQuizCate" resultType="com.qdu.qingyun.entity.Quiz.QuizCateVO">
        select *
        from quiz_cate
    </select>

    <select id="getQuizPObyCateId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizPO">
        select quiz_quiz.id,
               quiz_quiz.title,
               quiz_quiz.desc,
               quiz_quiz.is_hot,
               school_stu.name as 'author',
               quiz_quiz.tag as 'tags',
               quiz_quiz.score
        from quiz_quiz
                 inner join school_stu on ss_number = quiz_quiz.user_id
        where cate_id = #{cateId}
    </select>

    <select id="getChapterByQuizId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizChapterPO">
        select *, (select count(*) from quiz_ques where quiz_ques.quiz_id = quiz_chapter.id) as totalNum
        from quiz_chapter
        where quiz_id = #{quizId}
    </select>

    <select id="getSectionByQuizId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizSectionPO">
        select *, (select count(*) from quiz_ques where quiz_ques.section_id = quiz_section.id) as totalNum
        from quiz_section
        where quiz_id = #{quizId}
    </select>

    <select id="getQuesByQuizId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizQuesPO">
        select *
        from quiz_ques
        where quiz_id = #{quizId} limit 50
    </select>


    <select id="getUserQuiz" parameterType="String" resultType="com.qdu.qingyun.entity.User.UserQuizPO">
        select quiz_quiz.title,
               quiz_quiz.id,
               (select count(*)
                from quiz_ques
                where quiz_id = quiz_quiz.id) as totalNum,

               (select count(*)
                from quiz_record_ques
                where quiz_id = quiz_quiz.id
                  and is_correct = 1)         as doneNum,

               (select count(*)
                from quiz_record_ques
                where quiz_id = quiz_quiz.id
                  and is_correct = 0)         as errNum,

               (select count(*)
                from quiz_ques_star
                where quiz_id = quiz_quiz.id
                  and DELETED = 0)            as starNum

        from quiz_quiz_star
                 inner join quiz_quiz
                            on quiz_quiz_star.quiz_id = quiz_quiz.id
        where quiz_quiz_star.user_id = #{ssNumber}
    </select>

    <select id="getAddNumber" parameterType="Integer" resultType="Integer">
        select COUNT(*)
        from quiz_quiz_star
        where quiz_id = #{quizId}
    </select>

    <select id="getNoteNumber" parameterType="Integer" resultType="Integer">
        select COUNT(*)
        from quiz_note
        where quiz_id = #{quizId}
          and is_public = 1

    </select>
    <select id="getQuizNumber" parameterType="Integer" resultType="Integer">
        select COUNT(*)
        from quiz_quiz
        where id = #{quizId}

    </select>
    <select id="getCommentNumber" parameterType="Integer" resultType="Integer">
        select COUNT(*)
        from quiz_comment
        where quiz_id = #{quizId}
    </select>
    <select id="hasStar" resultType="Integer">
        select COUNT(*)
        from quiz_quiz_star
        where quiz_id = #{quizId}
          and user_id = #{ssNumber}
    </select>

    <select id="getQuizById" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizPO">
        select quiz_quiz.id,
               quiz_quiz.title,
               quiz_quiz.desc,
               quiz_quiz.version,
               quiz_quiz.update_time as createTime,
               school_stu.name as 'author',
               quiz_quiz.tag as 'tags',
               quiz_quiz.score
        from quiz_quiz
                 inner join school_stu on ss_number = quiz_quiz.user_id
        where quiz_quiz.id = #{quizId}
    </select>

    <insert id="addQuiz">
        insert into quiz_quiz_star (user_id, quiz_id, create_time)
        values (#{ssNumber}, #{quizId}, NOW());
    </insert>

    <delete id="removeQuiz">
        delete
        from quiz_quiz_star
        where user_id = #{ssNumber}
          and quiz_id = #{quizId}
    </delete>

    <select id="getQuesAnswerBasicInfo" parameterType="Integer"
            resultType="com.qdu.qingyun.entity.Quiz.QuizQuesForAnswerVO">
        select id,
               title,
               score,
               answer                                                          as answerStr,
               section_id,
               chapter_id,
               quiz_id,
               explain_id as 'defaultNoteId',
               (select value from quiz_ques_type where id = quiz_ques.type_id) as type
        from quiz_ques
        where id = #{quesId}
    </select>

    <!---->
    <select id="getAllQuesIdByQuizId" resultType="Integer" parameterType="com.qdu.qingyun.entity.Quiz.QuizStartReqVO">
        select id
        from quiz_ques
        where quiz_id = #{id} LIMIT #{quesNum}
    </select>

    <select id="getHasDoneQuesIdByQuizId" resultType="Integer" parameterType="com.qdu.qingyun.entity.Quiz.QuizStartReqVO">
        select ques_id as id
        from quiz_record_ques
        where quiz_id = #{id}
          and user_id = #{ssNumber}
    </select>

    <select id="getErrQuesIdByQuizId" resultType="Integer" parameterType="com.qdu.qingyun.entity.Quiz.QuizStartReqVO">
        select ques_id as id
        from quiz_record_ques
        where quiz_id = #{id}
          and user_id = #{ssNumber}
          and is_correct = 0
    </select>
    <!---->

    <select id="getOptionsByQuesId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizOption">
        select *
        from quiz_option
        where ques_id = #{quesId}
    </select>

    <select id="getFilesByQuesId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizFile">
        select media_type as type, url, `index`
        from quiz_file
        where owner_id = #{quesId}
          and quiz_file_type_id = 1
    </select>

    <select id="getOtherNote" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizNotePO">
        SELECT school_stu.`name` as userName,
               quiz_note.id,
               quiz_note.user_id,
               quiz_note.body,
               quiz_note.view_count,
               quiz_note.create_time,
               quiz_note.quiz_id,
               quiz_note.is_public
        from quiz_note
                 INNER JOIN school_stu on quiz_note.user_id = school_stu.ss_number
        where quiz_note.is_public = 1
          and quiz_note.ques_id = #{quesId}
          and quiz_note.id != #{defaultNoteId}
    </select>

    <select id="getNoteByNoteId" parameterType="Integer" resultType="com.qdu.qingyun.entity.Quiz.QuizNotePO">
        SELECT school_stu.`name` as userName,
               quiz_note.id,
               quiz_note.user_id,
               quiz_note.body,
               quiz_note.view_count,
               quiz_note.create_time,
               quiz_note.quiz_id,
               quiz_note.is_public
        from quiz_note
                 INNER JOIN school_stu on quiz_note.user_id = school_stu.ss_number
        where quiz_note.id = #{noteId}
    </select>

    <insert id="submitQuesRecorder" parameterType="com.qdu.qingyun.entity.Quiz.QuizQuesSubmitReqVO">
        insert into quiz_record_ques (user_id, create_time, user_input, is_correct, ques_id, quiz_id)
        values (#{ssNumber}, NOW(), #{userInput}, #{isRight}, #{quesId}, #{quizId});
    </insert>

    <select id="getMaxQuizId" resultType="Integer">
        select max(id)
        from quiz_quiz;
    </select>

    <insert id="createQuiz" parameterType="com.qdu.qingyun.entity.Quiz.QuizPO" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into quiz_quiz (user_id, update_time, cate_id, title, `desc`)
        values (#{authorId}, NOW(), #{cateId}, #{title}, #{desc});
    </insert>


</mapper>